<?php

require_once('basecontroller.php');

class Crudpaybill extends BaseController {

  var $data_type = null;   
  var $data = null;


	function Crudpaybill()
	{

		parent::BaseController(); 

	}



  ##### index #####
  function index()
  {
	if(is_logged() && get_role()<='3')
	{
		    
    redirect("crudpaybill/filteredgrid");

	}else{redirect("auth/login");}
  }



  ##### DataFilter + DataGrid #####
  function filteredgrid()
  {
	if(is_logged() && get_role()<='3')
	{
        
    //filteredgrid//
    
    $this->rapyd->load("datafilter","datagrid");
    $this->load->model('DateTime_model');
    $this->rapyd->uri->keep_persistence();
    
    //filter
    $filter = new DataFilter("Carian Bayaran Ahli");
    $filter->db->select("*");
    $filter->db->from("kwkpp_sumbangan");
    $filter->db->join("kwkpp_ahli_khairat","kwkpp_ahli_khairat.ahliKhairatID=kwkpp_sumbangan.ahliKhairatID","LEFT");
	$filter->db->join("kwkpp_jenis_bil","kwkpp_jenis_bil.jenisBilCode=kwkpp_sumbangan.jenisBilCode","LEFT");

	$filter->noPekerja = new inputField("No Pekerja", "noPekerja");

	$filter->bulan = new dropdownField("Bulan", "bulan");
    $filter->bulan->option("","");  $filter->bulan->options($this->DateTime_model->month_mm());
	//$filter->bulan->insertValue = date('m');
	
	$curr_year=date("Y");
	$curr_year_minus5 = $curr_year-5;
	$curr_year_plus5 = $curr_year+5;
	for($y=$curr_year_minus5;$y<=$curr_year_plus5;$y++)
	{$ddmenu[$y] = $y;}

	$filter->tahun = new dropdownField("Tahun", "tahun");
    $filter->tahun->option("","");  
	$filter->tahun->options($ddmenu);
	//$filter->tahun->insertValue = date('Y');

	$filter->jenisBilCode = new dropdownField("Jenis Bil", "kwkpp_sumbangan.jenisBilCode");
    $filter->jenisBilCode->option("",""); 
    $filter->jenisBilCode->options("select jenisBilCode, concat(jenisBilCode, ' - ', jenisBilDesc) from kwkpp_jenis_bil");

    $filter->buttons("reset","search");    
    $filter->build();
    

    $uri = "crudpaybill/dataedit/show/<#sumbanganID#>";
    
    //grid
    $grid = new DataGrid("Senarai Bayaran");
    //$grid->use_function("callback_test");
    $grid->order_by("tahun desc,bulan desc, nama asc, kwkpp_sumbangan.jenisBilCode","asc");
    $grid->per_page = 25;
    $grid->use_function("substr");

	$grid->column("Tahun", "tahun");
	$grid->column("Bulan", "bulan");
	$grid->column_detail("No Pekerja", "noPekerja", $uri);
	$grid->column("Nama", "nama");
	$grid->column("Kod Bil", "jenisBilCode");
	$grid->column("Keterangan Bil", "jenisBilDesc");
	$grid->column("Amaun Bil", "amaun");
	

    $grid->add("crudpaybill/dataedit/create");
    $grid->build();
    /**/
    $data["crud"] = $filter->output . $grid->output;
    
    //endfilteredgrid//
    
    
    
    $this->_render("crud", $data, 
                    array(
                      array("file"=>THISFILE, "id"=>"filteredgrid", "title"=>"Filtered Grid"),
                    )
                  );
	}else{redirect("auth/login");}
  }
  
  
  
  ##### dataedit #####
  function dataedit()
  {  
	if(is_logged() && get_role()<='3')
	{
 
    if (($this->uri->segment(5)==="1") && ($this->uri->segment(4)==="do_delete")){
      show_error("Please do not delete the first record, it's required by DataObject sample");
    }
  
    ////dataedit//
    $this->rapyd->load("dataedit");
	$this->load->model('Ahli_khairat_model');
	$this->load->model ('DateTime_model');

    $edit = new DataEdit("Bayaran Ahli", "kwkpp_sumbangan");
    $edit->back_uri = "crudpaybill/filteredgrid";

	$edit->ahliKhairatID = new dropdownField("Nama Ahli (No Pekerja)", "ahliKhairatID");
    $edit->ahliKhairatID->option("","");
	$edit->ahliKhairatID->options($this->Ahli_khairat_model->all_ahli_khairat());
	$edit->ahliKhairatID->rule = "required";

/*	if(is_numeric($this->uri->segment(4)))
	{$edit->ahliKhairatID->value = $this->uri->segment(4);}
	elseif(is_numeric($this->uri->segment(6)))
	{$edit->ahliKhairatID->value = $this->uri->segment(6);}
	else*/
	if(is_numeric($this->uri->segment(3)))
	{$edit->ahliKhairatID->value = $this->uri->segment(3);}

	if ($this->uri->segment(5)==="modify" || $this->uri->segment(3)==="modify" || $this->uri->segment(5)==="update" || $this->uri->segment(3)==="update")
	{
	$edit->ahliKhairatID->mode = "readonly";
	}
/*	if($this->uri->segment(5)==="show" OR $this->uri->segment(5)==="modify" OR $this->uri->segment(5)==="update" OR $this->uri->segment(3)==="show" OR $this->uri->segment(3)==="modify" OR $this->uri->segment(3)==="update")
	{
    $edit->ahliKhairatID->options("SELECT ahliKhairatID, concat(nama, ' (', noPekerja, ')') FROM kwkpp_ahli_khairat");
	}
	elseif($this->uri->segment(5)==="create" OR $this->uri->segment(5)==="insert" OR $this->uri->segment(3)==="create" OR $this->uri->segment(3)==="insert")
	{
	$edit->ahliKhairatID->options("SELECT ak.ahliKhairatID, concat(ak.nama, ' (', ak.noPekerja, ')') FROM kwkpp_ahli_khairat ak where ak.ahliKhairatID not in (select k.ahliKhairatID from kwkpp_kematian k)");
	}
	$edit->ahliKhairatID->rule = "required";

	$curr_year=date("Y");
	$curr_year_minus5 = $curr_year-5;
	$curr_year_plus5 = $curr_year+5;
	for($y=$curr_year_minus5;$y<=$curr_year_plus5;$y++)
	{$ddmenu[$y] = $y;}
*/
	$edit->bulan = new dropdownField("Bulan", "bulan");
    $edit->bulan->option("","");
	$edit->bulan->options($this->DateTime_model->month_mm());
	//$edit->bulan->insertValue = "bulan";
	$edit->bulan->rule = "trim|required|numeric|min_length[2]|max_length[2]";
if(is_numeric($this->uri->segment(5)))
	{$edit->bulan->value = $this->uri->segment(5);}

	$edit->tahun = new dropdownField("Tahun", "tahun");
    $edit->tahun->option("","");
	$edit->tahun->options($this->DateTime_model->yearBill_yyyy());//year5_yyyy());//
	//$edit->tahun->insertValue = "tahun";
	$edit->tahun->rule = "required";
if(is_numeric($this->uri->segment(4)))
	{$edit->tahun->value = $this->uri->segment(4);}


	$edit->jenisBilID = new dropdownField("Jenis Bil", "jenisBilCode");
	$edit->jenisBilID->option("","");
	$edit->jenisBilID->options("SELECT jenisBilCode, concat(jenisBilCode, ' - ', jenisBilDesc) FROM kwkpp_jenis_bil order by jenisBilCode");
	$edit->jenisBilID->rule = "required";
if(($this->uri->segment(6)))
	{$edit->jenisBilID->value = $this->uri->segment(6);}

	$edit->amaun_bil = new inputField("Amaun Bil", "amaun");
    $edit->amaun_bil->rule = "trim|required|numeric|max_length[9]";
if(is_numeric($this->uri->segment(7)))
	{$edit->amaun_bil->value = $this->uri->segment(7);}

	$edit->jenisBayaranCode = new dropdownField("Cara Bayaran", "jenisBayaranCode");
	$edit->jenisBayaranCode->option("","");
	$edit->jenisBayaranCode->options("SELECT jenisBayaranCode, concat(jenisBayaranCode, ' - ', jenisBayaranDesc) FROM kwkpp_mod_bayaran order by jenisBayaranCode");

	$edit->bankID = new dropdownField("Nama Bank", "bankID");
	$edit->bankID->option("","");
	$edit->bankID->options("SELECT bankID, bankDesc FROM kwkpp_bank order by bankDesc");
	
	$edit->noRuj = new inputField("No Rujukan", "noRuj");
    $edit->noRuj->rule = "trim|max_length[20]";

    if ($this->uri->segment(4)==="1"){
      $edit->buttons("modify", "save", "undo", "back");
    } else {
      $edit->buttons("modify", "save", "undo", "delete", "back");
    }

    //$edit->use_function("callback_test");
    //$edit->test = new freeField("Test", "test", "<callback_test><#user_id#>|3</callback_test>");
    
    
    $edit->build();
    $data["edit"] = $edit->output;
     
    //enddataedit//


    $this->_render("dataedit", $data, 
                    array(
                      array("file"=>THISFILE, "id"=>"dataedit", "title"=>"dataedit"),
                    )
                  );
  }
  else
  {redirect("auth/login");}

  }
  

}

?>